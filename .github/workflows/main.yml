name: CI-CD-Pipeline-to-AWS-ElasticBeanStalk

# env:
#   EB_S3_BUCKET_NAME        :  "tjs-app"
#   EB_APPLICATION_NAME      : "tjs-application"
#   EB_ENVIRONMENT_NAME      : "Tjsapplication-env"
#   AWS_REGION_NAME          : "us-east-2"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ main ]

jobs:
  build_test_and_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 12.x ]
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Installing NPM
        run: npm install
      
      # - name: Linting check
      #   run: npm run lint

      - name: Building application
        run: npm run build --if-present

      # - name: Testing application
      #   run: npm test 

      - name: Create ZIP deployment package
        run:  zip -r deploy.zip . -x '*.git*'

      - name: Get timestamp
        id: timestamp
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S-%3NZ')"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3 
        with: 
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: "us-east-2"


      - name: Run beanstalk deploy
        uses: einaregilsson/beanstalk-deploy@v2
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: "tjs-application"
          environment_name: "Tjsapplication-env"
          aws_region: "us-east-2" 
          version_label: "${{ steps.timestamp.outputs.date }}"
          deployment_package: deploy.zip
     
      - name: Yippee! Deployed!
        run: echo App deployed to ELB  